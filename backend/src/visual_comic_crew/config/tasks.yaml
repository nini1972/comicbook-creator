story_creation_task:
  description: >
    Create a comic story script for {topic} with:
    1. A compelling storyline with beginning, middle, and end
    2. 4-6 panel breakdown with detailed visual descriptions
    3. Character descriptions and dialogue for each panel
    4. Visual style guidelines and mood specifications
  expected_output: >
    A detailed comic script with panel-by-panel descriptions,
    character details, dialogue, and visual style notes
  agent: story_writer

image_generation_task:
  description: |
    Generate comic panel images based on the story script with consistent character appearances using Option 6 approach.

    STEP 1 - CHARACTER CONSISTENCY SETUP (Option 6 Approach):
    If the story contains named characters, FIRST attempt to create character references:
    1. Identify all main characters from the story
    2. For EACH character, use the Character Consistency Tool with action "create_character":
       - character_name: The character's name
       - character_description: Detailed physical description from the story
       - existing_image_path: (optional) Path to existing character image if available
    3. If character reference creation FAILS, note the failure and continue with panel generation
    4. DO NOT stop the entire process if character reference creation fails

    STEP 2 - PANEL GENERATION (MANDATORY FOR ALL PANELS):
    You MUST generate ALL panels described in the story. For each panel:
    1. Extract the visual description for that panel
    2. Identify which named characters appear in this panel
    3. For panels WITH named characters:
       - IF character reference exists: Use Character Consistency Tool with action "generate_scene"
       - IF character reference FAILED: Use Gemini Image Generator with detailed character description
    4. For panels WITHOUT named characters:
       - Use the Gemini Image Generator tool for standard generation
    5. You MUST call the actual tool and record the REAL returned image path
    6. NEVER fabricate or make up image paths - only use paths returned by tools

    ERROR HANDLING REQUIREMENTS:
    - If character reference creation fails, continue with direct image generation
    - If a panel generation fails, note it and continue with remaining panels
    - ALWAYS attempt to generate ALL panels - never stop early
    - Use fallback methods when primary methods fail
    - For failed character references, include detailed character descriptions in Gemini prompts

    FALLBACK STRATEGY FOR CHARACTER CONSISTENCY:
    When character references fail, enhance your Gemini Image Generator prompts with:
    - Detailed physical description of the character from the story
    - Consistent style notes (e.g., "same character as previous panels")
    - Visual continuity cues (clothing, facial features, build, etc.)

    TOOL CALL REQUIREMENTS:
    - You MUST actually call tools for each panel generation
    - NEVER make up fake filenames like "panel2.png", "panel3.png" etc.
    - ONLY use image paths actually returned by the tools
    - If a tool call fails, record "FAILED" for that panel
    - Continue with remaining panels even if early ones fail

    MANDATORY FINAL SUMMARY:
    You MUST provide a complete summary with:
    - Character references: [list with success/failure status]
    - Panel generation results for EACH panel (1 through total):
      - Panel X: [actual tool-returned path OR "FAILED" with reason]
    - Total successful generations vs total attempted
    - Specific failure reasons for any failed panels

    Ensure visual continuity and comic art style (same characters, styles, palette).
    Maintain consistent lighting and color palette.
  expected_output: >
    A complete summary with ACTUAL results only (no fabricated data):

    Character References:
    - [Character Name]: [SUCCESS: path] OR [FAILED: reason]

    Panel Generation Results:
    - Panel 1: [actual tool-returned path OR "FAILED: reason"]
    - Panel 2: [actual tool-returned path OR "FAILED: reason"] 
    - Panel 3: [actual tool-returned path OR "FAILED: reason"]
    - Panel 4: [actual tool-returned path OR "FAILED: reason"]
    - Panel 5: [actual tool-returned path OR "FAILED: reason"]
    - Panel 6: [actual tool-returned path OR "FAILED: reason"]

    Summary:
    - Total panels attempted: [number]
    - Successfully generated: [number]
    - Failed: [number with reasons]

    CRITICAL: Only include paths actually returned by tools. Never make up filenames.
  agent: visual_director
  context:
    - story_creation_task

comic_assembly_task:
  description: |
    Use the Comic Layout Designer tool to create the final comic layout.

    CRITICAL INSTRUCTIONS:
    1. Extract panel descriptions and dialogue from the story task
    2. Extract image paths from the image generation task  
    3. Call the Comic Layout Designer tool with these parameters
    4. Return ONLY the tool's markdown output - NO agent thoughts or reasoning

    Your final answer must contain ONLY the comic markdown layout.
  expected_output: >
    Clean comic markdown layout with panels, images, and dialogue.
    NO agent thoughts, reasoning, or meta-commentary.
    ONLY the comic content itself.
    The tool returns a complete comic strip in markdown format with:
    - Title and introduction
    - Properly formatted panels with descriptions  
    - Embedded images with correct frontend paths (/comic_panels/filename.png)
    - Dialogue for each panel
    - Professional presentation
  agent: comic_assembler
  context:
    - story_creation_task
    - image_generation_task
